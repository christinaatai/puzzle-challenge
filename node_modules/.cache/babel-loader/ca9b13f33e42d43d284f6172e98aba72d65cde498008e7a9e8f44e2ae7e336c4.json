{"ast":null,"code":"var _jsxFileName = \"/Users/christinatai/Desktop/Desktop - Christina\\u2019s MacBook Air/escape-room/src/components/ObfuscatedAnswer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObfuscatedAnswer = ({\n  encodedAnswer\n}) => {\n  _s();\n  const [isRevealed, setIsRevealed] = React.useState(false);\n  const decodedAnswer = React.useMemo(() => {\n    return atob(encodedAnswer);\n  }, [encodedAnswer]);\n  const scrambledAnswer = React.useMemo(() => {\n    return decodedAnswer.split('').map(() => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join('');\n  }, [decodedAnswer]);\n  const textAnimation = useSpring({\n    opacity: isRevealed ? 1 : 0,\n    transform: `translateY(${isRevealed ? 0 : 10}px)`,\n    position: 'absolute',\n    config: {\n      tension: 300,\n      friction: 20\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"relative inline-block font-bold px-1\",\n    onMouseEnter: () => setIsRevealed(true),\n    onMouseLeave: () => setIsRevealed(false),\n    style: {\n      backgroundColor: isRevealed ? 'transparent' : '#4B5563'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: isRevealed ? 'black' : '#4B5563'\n      },\n      children: scrambledAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.span, {\n      style: {\n        ...textAnimation,\n        color: 'black'\n      },\n      children: decodedAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ObfuscatedAnswer, \"esLdkkPZCB+B0GSgak+IFDR5GPg=\", false, function () {\n  return [useSpring];\n});\n_c = ObfuscatedAnswer;\nexport default ObfuscatedAnswer;\nvar _c;\n$RefreshReg$(_c, \"ObfuscatedAnswer\");","map":{"version":3,"names":["React","useSpring","animated","jsxDEV","_jsxDEV","ObfuscatedAnswer","encodedAnswer","_s","isRevealed","setIsRevealed","useState","decodedAnswer","useMemo","atob","scrambledAnswer","split","map","String","fromCharCode","Math","floor","random","join","textAnimation","opacity","transform","position","config","tension","friction","className","onMouseEnter","onMouseLeave","style","backgroundColor","children","color","fileName","_jsxFileName","lineNumber","columnNumber","span","_c","$RefreshReg$"],"sources":["/Users/christinatai/Desktop/Desktop - Christinaâ€™s MacBook Air/escape-room/src/components/ObfuscatedAnswer.js"],"sourcesContent":["import React from 'react';\nimport { useSpring, animated } from '@react-spring/web';\n\nconst ObfuscatedAnswer = ({ encodedAnswer }) => {\n  const [isRevealed, setIsRevealed] = React.useState(false);\n  \n  const decodedAnswer = React.useMemo(() => {\n    return atob(encodedAnswer);\n  }, [encodedAnswer]);\n\n  const scrambledAnswer = React.useMemo(() => {\n    return decodedAnswer\n      .split('')\n      .map(() => String.fromCharCode(Math.floor(Math.random() * 26) + 97))\n      .join('');\n  }, [decodedAnswer]);\n\n  const textAnimation = useSpring({\n    opacity: isRevealed ? 1 : 0,\n    transform: `translateY(${isRevealed ? 0 : 10}px)`,\n    position: 'absolute',\n    config: { tension: 300, friction: 20 }\n  });\n\n  return (\n    <span \n      className=\"relative inline-block font-bold px-1\"\n      onMouseEnter={() => setIsRevealed(true)}\n      onMouseLeave={() => setIsRevealed(false)}\n      style={{ backgroundColor: isRevealed ? 'transparent' : '#4B5563' }}\n    >\n      <span style={{ color: isRevealed ? 'black' : '#4B5563' }}>\n        {scrambledAnswer}\n      </span>\n      <animated.span \n        style={{\n          ...textAnimation,\n          color: 'black',\n        }}\n      >\n        {decodedAnswer}\n      </animated.span>\n    </span>\n  );\n};\n\nexport default ObfuscatedAnswer; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMC,aAAa,GAAGX,KAAK,CAACY,OAAO,CAAC,MAAM;IACxC,OAAOC,IAAI,CAACP,aAAa,CAAC;EAC5B,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMQ,eAAe,GAAGd,KAAK,CAACY,OAAO,CAAC,MAAM;IAC1C,OAAOD,aAAa,CACjBI,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAC,MAAMC,MAAM,CAACC,YAAY,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CACnEC,IAAI,CAAC,EAAE,CAAC;EACb,CAAC,EAAE,CAACX,aAAa,CAAC,CAAC;EAEnB,MAAMY,aAAa,GAAGtB,SAAS,CAAC;IAC9BuB,OAAO,EAAEhB,UAAU,GAAG,CAAC,GAAG,CAAC;IAC3BiB,SAAS,EAAG,cAAajB,UAAU,GAAG,CAAC,GAAG,EAAG,KAAI;IACjDkB,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG;EACvC,CAAC,CAAC;EAEF,oBACEzB,OAAA;IACE0B,SAAS,EAAC,sCAAsC;IAChDC,YAAY,EAAEA,CAAA,KAAMtB,aAAa,CAAC,IAAI,CAAE;IACxCuB,YAAY,EAAEA,CAAA,KAAMvB,aAAa,CAAC,KAAK,CAAE;IACzCwB,KAAK,EAAE;MAAEC,eAAe,EAAE1B,UAAU,GAAG,aAAa,GAAG;IAAU,CAAE;IAAA2B,QAAA,gBAEnE/B,OAAA;MAAM6B,KAAK,EAAE;QAAEG,KAAK,EAAE5B,UAAU,GAAG,OAAO,GAAG;MAAU,CAAE;MAAA2B,QAAA,EACtDrB;IAAe;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACPpC,OAAA,CAACF,QAAQ,CAACuC,IAAI;MACZR,KAAK,EAAE;QACL,GAAGV,aAAa;QAChBa,KAAK,EAAE;MACT,CAAE;MAAAD,QAAA,EAEDxB;IAAa;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEX,CAAC;AAACjC,EAAA,CAzCIF,gBAAgB;EAAA,QAcEJ,SAAS;AAAA;AAAAyC,EAAA,GAd3BrC,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}